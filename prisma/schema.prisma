generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id     Int    @id @default(autoincrement())
  name   String
  userId Int
}

model Group {
  id     Int    @id @default(autoincrement())
  userId Int
  name   String
}

model Task {
  id           Int     @id @default(autoincrement())
  userId       Int
  groupName    String
  groupId      Int
  activityName String
  activityId   Int
  member       String
  dueDate      String
  name         String?
  type         String
  location     String?
}

model User {
  id                 Int              @id @default(autoincrement())
  email              String           @unique
  name               String?
  cancellationReason String?
  lastPaymentDate    DateTime?
  link               String?
  otp                String?
  otpExpiration      DateTime?
  password           String?
  subscriptionType   SubscriptionType
  userType           UserType
  subscriptions      Subscription[]
}

model Subscription {
  id                 Int       @id @default(autoincrement())
  userId             Int
  razorpayCustomerId String
  planId             String
  startDate          DateTime  @default(now())
  endDate            DateTime?
  amount             Int
  status             String
  autoRenew          Boolean   @default(true)
  renewalCount       Int       @default(0)
  payments           Payment[]
  user               User      @relation(fields: [userId], references: [id])
}

model Payment {
  id                Int          @id @default(autoincrement())
  subscriptionId    Int
  amount            Int
  paymentDate       DateTime     @default(now())
  status            String
  razorpayPaymentId String?
  subscription      Subscription @relation(fields: [subscriptionId], references: [id])
}

model Link {
  id            Int     @id @default(autoincrement())
  link          String  @unique
  owner         String?
  duedate       String?
  group         String?
  member        String?
  taskname      String?
  completeddate String?
  location      String?
  freecount     Int     @default(5)
  subscription  String?
}

model paidmemberdata {
  id       Int    @id @default(autoincrement())
  link     String
  otp      String
  otpcount Int    @default(1)
}

model Ad {
  id         Int      @id @default(autoincrement())
  contentUrl String
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum UserType {
  Superadmin
  Admin
  User
}

enum SubscriptionType {
  Free
  Professional_monthly
  Professional_yearly
  Premium_monthly
  Premium_yearly
}
